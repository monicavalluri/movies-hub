{"version":3,"sources":["results/Card.js","results/Results.js","checkout/Checkout.js","landing/Landing.js","header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Card","this","props","movie","addToPlaylist","removeFromPlaylist","inPlaylist","className","Title","Year","Type","onClick","alt","src","Poster","React","Component","Results","searchData","checkoutPlaylist","useState","playlist","setPlaylist","updatePlaylist","updatedPlaylist","filter","mov","imdbID","push","find","map","length","Checkout","Landing","baseURL","name","setName","showResults","setShowResults","setSearchData","error","setError","checkout","setCheckout","totalResults","setTotalResults","getMovies","searchText","a","searchUrl","fetch","response","json","Response","Search","Error","toLowerCase","console","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b6f9b71.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nclass Card extends React.Component {\n    render() {\n        const {\n            movie, \n            addToPlaylist, \n            removeFromPlaylist, \n            inPlaylist\n        } = this.props;\n\n        return (\n            <div className='Card'>\n                <div>\n                    <div className='Card-metadata'>\n                        <h4>{movie.Title}</h4>\n                        <p>Year: {movie.Year}</p>\n                        <p>Type: {movie.Type}</p>\n                    </div>\n                    {\n                        !inPlaylist && \n                        <div className='Card-actions'>\n                            <button className='add-to-playlist' onClick={() => addToPlaylist(movie)}>\n                                Add to Playlist\n                            </button>\n                        </div>\n                    }\n                    {\n                        inPlaylist && \n                        <div className='Card-actions'>\n                            <p>Added to playlist</p>\n                            <button className='add-to-playlist' onClick={() => removeFromPlaylist(movie)}>\n                                Remove from playlist\n                            </button>\n                        </div>\n                    }\n                </div>\n                <div><img className='Card-image' alt={movie.Title} src={movie.Poster}/></div>\n            </div>\n        )\n    }\n}\n\nexport default Card","import React, {useState} from 'react';\nimport Card from './Card';\nimport './Results.css';\n\nexport default function Results({searchData, checkoutPlaylist}) {\n    const [playlist, setPlaylist] = useState([])\n\n    const addToPlaylist = (movie) => {\n        updatePlaylist(movie);\n    }\n\n    const removeFromPlaylist = (movie) => {\n        const updatedPlaylist = playlist.filter(mov => mov.imdbID !== movie.imdbID)\n        setPlaylist([...updatedPlaylist])\n    }\n\n    const updatePlaylist = (movie) => {\n        if(!inPlaylist(movie)) {\n            playlist.push(movie)\n            setPlaylist([...playlist])\n        }\n    }\n\n    const inPlaylist = (movie) => {\n        return playlist.find(mov => mov.imdbID === movie.imdbID)\n    }\n\n    return <>\n    {\n        searchData.map(movie => \n        <Card \n            movie={movie} \n            key={movie.imdbID} \n            addToPlaylist={addToPlaylist}\n            removeFromPlaylist={removeFromPlaylist} inPlaylist={inPlaylist(movie)}>\n        </Card>)\n    }\n    {\n        (playlist.length > 0) && \n        <div className='Results-checkout'>\n            <button className='Checkout-button' onClick={() => checkoutPlaylist(playlist)}>\n                Checkout Playlist ({playlist.length})\n            </button>\n        </div>\n    }\n    </>\n}","import React from 'react';\nimport './Checkout.css';\nimport '../results/Card.css';\n\nexport default function Checkout({playlist}) {\n    return <div className='Checkout-container'>\n        <h3>Movies in playlist</h3>\n        <div className='Checkout-card-container'>\n            {\n                playlist.map(movie => \n                    <div className='Card' key={movie.imdbID}>\n                        <div className='Card-metadata'>\n                            <h4>{movie.Title}</h4>\n                            <p>Year: {movie.Year}</p>\n                            <p>Type: {movie.Type}</p>\n                        </div>\n                        <div><img className='Card-image' alt={movie.Title} src={movie.Poster}/></div>\n                    </div>\n                )\n            }\n        </div>\n        {   <div className='Checkout-footer'>\n                My favorite color is Black\n            </div>\n        }\n    </div>\n}","import React, {useState} from 'react';\nimport Results from '../results/Results';\nimport Checkout from '../checkout/Checkout';\nimport './Landing.css';\n\nexport function Landing(props) {\n    const APIKey = '5e8f875f'\n    const baseURL = `https://www.omdbapi.com/?apikey=${APIKey}&`\n\n    const [name, setName] = useState('')\n    const [showResults, setShowResults] = useState(false)\n    const [searchData, setSearchData] = useState([])\n    const [error, setError] = useState('')\n    const [checkout, setCheckout] = useState(false)\n    const [playlist, setPlaylist] = useState([])\n    const [totalResults, setTotalResults] = useState(0)\n\n    const getMovies = async(searchText) => {\n        const searchUrl = `${baseURL}s=${searchText}`\n        try{\n            const response = await fetch(searchUrl);\n            const {Response, Search, Error, totalResults} = await response.json();\n            \n            setShowResults(Response.toLowerCase() === 'true')\n            setSearchData(Search || [])\n            setError(Error || '')\n            setTotalResults(totalResults || 0)\n\n        } catch(error) {\n            console.error(`Error fetching movies list: ${error}`);\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        getMovies(name)\n    }\n\n    const checkoutPlaylist = (playlist) => {\n        setCheckout(true)\n        setPlaylist(playlist)\n    }\n    \n    return checkout ?\n            <Checkout playlist={playlist}></Checkout>\n        :\n            (<div className='App-landing'>\n                <form onSubmit={handleSubmit} className='Landing-form'>\n                    <input \n                        type='text'\n                        value={name}\n                        placeholder='Search for movies' \n                        className='Landing-input'\n                        onChange={event => setName(event.target.value)}/>\n                    <input type='submit' value='Search' className='Landing-search'/>\n                </form>\n                {\n                    showResults && \n                    <div className='Landing-results-container'>\n                        <p>Showing {searchData.length} of {totalResults} results</p>\n                        <div className='Landing-results'>\n                            <Results searchData={searchData}\n                                    checkoutPlaylist={checkoutPlaylist}\n                                    totalResults={totalResults}></Results>\n                        </div>\n                    </div>\n                }\n                {\n                    !showResults && <div>{error}</div>\n                }\n            </div>)\n        \n   \n}\n\nexport default Landing;","import './Header.css'\nexport default function Header() {\n    return(\n        <header className='App-header'>Movies</header>\n    )\n}","import './App.css';\nimport Landing from './landing/Landing';\nimport Header from './header/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Landing></Landing>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}